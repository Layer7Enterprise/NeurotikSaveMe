#! /usr/bin/env ruby

require 'socket'

if ARGV.count < 1
  puts "[mode(basic) ....] - Based on a simple pairing"
  exit
end

mode = ARGV[0] 

if mode == "basic"
  if ARGV.count != 6 and ARGV.count != 5
    #DelayBetweenExample = How to long to wait between each example
    puts "basic [port trainingFile.train 100(Wait between samples) 120(secondsToRun) offset(optional)]"
    exit
  end

  #Get arguments
  port = ARGV[1].to_i
  trainingFile = ARGV[2]
  delayBetweenExamples = ARGV[3].to_i
  time_alive = ARGV[4].to_i
  offset = ARGV[5].to_i
  if offset.nil?
    offset = 0
  end

  Thread.new do
    sleep time_alive
    exit
  end

  puts "Loading nbtrain basic file #{trainingFile}, the delay between examples at #{delayBetweenExamples}ms, and sending this data to 0.0.0.0:#{port}"
  examples = {}
  File.open(trainingFile, "r") do |file|
    while !file.eof
      example = file.readline.split(" ")
      examples[example[0]] = example[1]
      puts "#{example[0]} => #{example[1]}"
    end
  end

  s = UDPSocket.new
  loop do
    randomKey = examples.keys.sample
    randomValue = examples[randomKey]
    offsetPad = "0"*randomKey.length*2*offset
    #puts "Testing #{randomKey} => #{randomValue}"

    s.send(offsetPad + randomKey + randomValue, 0, "0.0.0.0", port)

    sleep delayBetweenExamples / 1000.0
  end
else
  puts "Not a mode"
  exit
end
